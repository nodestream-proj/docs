"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[913],{7305:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>n,metadata:()=>d,toc:()=>h});var r=s(4848),t=s(8453);const n={},c="Filters",d={id:"reference/filters",title:"Filters",description:"ValuesMatchPossibilitiesFilter",source:"@site/docs/reference/filters.md",sourceDirName:"reference",slug:"/reference/filters",permalink:"/docs/docs/reference/filters",draft:!1,unlisted:!1,editUrl:"https://github.com/nodesteram-proj/docs/tree/main/packages/create-docusaurus/templates/shared/docs/reference/filters.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extractors",permalink:"/docs/docs/reference/extractors"},next:{title:"Interpreting",permalink:"/docs/docs/reference/interpreting"}},l={},h=[{value:"<code>ValuesMatchPossibilitiesFilter</code>",id:"valuesmatchpossibilitiesfilter",level:2},{value:"<code>ExcludeWhenValuesMatchPossibilities</code>",id:"excludewhenvaluesmatchpossibilities",level:2},{value:"<code>FieldMatcher</code>",id:"fieldmatcher",level:2},{value:"<code>SchemaEnforcer</code>",id:"schemaenforcer",level:2},{value:"Examples",id:"examples",level:3},{value:"Infer schema from records",id:"infer-schema-from-records",level:4},{value:"Use a predefined schema",id:"use-a-predefined-schema",level:4},{value:"Reminder",id:"reminder",level:2}];function o(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"filters",children:"Filters"}),"\n",(0,r.jsx)(i.h2,{id:"valuesmatchpossibilitiesfilter",children:(0,r.jsx)(i.code,{children:"ValuesMatchPossibilitiesFilter"})}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"ValuesMatchPossibilitiesFilter"})," filter is used to exclude records where a field matches any of a list of possibilities."]}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"ValuesMatchPossibilitiesFilter"})," is accessible via the ",(0,r.jsx)(i.code,{children:"implementation"})," string ",(0,r.jsx)(i.code,{children:"nodestream.pipeline.filters:ValuesMatchPossibilitiesFilter"}),"."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Key"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Required"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"fields"})}),(0,r.jsx)(i.td,{children:"A list of field matchers."}),(0,r.jsx)(i.td,{children:"List[FieldMatcher]"}),(0,r.jsx)(i.td,{children:"N/A"}),(0,r.jsx)(i.td,{children:"Yes"})]})})]}),"\n",(0,r.jsx)(i.h2,{id:"excludewhenvaluesmatchpossibilities",children:(0,r.jsx)(i.code,{children:"ExcludeWhenValuesMatchPossibilities"})}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"ExcludeWhenValuesMatchPossibilities"})," filter is used to exclude records where a field matches any of a list of possibilities.\nThe ",(0,r.jsx)(i.code,{children:"ExcludeWhenValuesMatchPossibilities"})," is accessible via the ",(0,r.jsx)(i.code,{children:"implementation"})," string ",(0,r.jsx)(i.code,{children:"nodestream.pipeline.filters:ExcludeWhenValuesMatchPossibilities"}),"."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Key"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Required"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"fields"})}),(0,r.jsx)(i.td,{children:"A list of field matchers."}),(0,r.jsx)(i.td,{children:"List[FieldMatcher]"}),(0,r.jsx)(i.td,{children:"N/A"}),(0,r.jsx)(i.td,{children:"Yes"})]})})]}),"\n",(0,r.jsx)(i.h2,{id:"fieldmatcher",children:(0,r.jsx)(i.code,{children:"FieldMatcher"})}),"\n",(0,r.jsxs)(i.p,{children:["A ",(0,r.jsx)(i.code,{children:"FieldMatcher"})," is an object with the following properties:"]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Key"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Required"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"value"})}),(0,r.jsx)(i.td,{children:"An expression that selects the value of the field to match on."}),(0,r.jsx)(i.td,{children:"JMESPath"}),(0,r.jsx)(i.td,{children:"N/A"}),(0,r.jsx)(i.td,{children:"Yes"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"possibilities"})}),(0,r.jsx)(i.td,{children:"A list of values to match against."}),(0,r.jsx)(i.td,{children:"List[Any]"}),(0,r.jsx)(i.td,{children:"N/A"}),(0,r.jsx)(i.td,{children:"Yes"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"normalization"})}),(0,r.jsxs)(i.td,{children:["A list of normalization functions to apply to the field value before matching. See ",(0,r.jsx)(i.a,{href:"../interpreting#normalizers",children:"normalization"})," reference for flags"]}),(0,r.jsx)(i.td,{children:"Dict[str, Any]"}),(0,r.jsx)(i.td,{children:"N/A"}),(0,r.jsx)(i.td,{children:"No"})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"schemaenforcer",children:(0,r.jsx)(i.code,{children:"SchemaEnforcer"})}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"SchemaEnforcer"})," filter is used to enforce a schema on the records being processed.\nThe ",(0,r.jsx)(i.code,{children:"SchemaEnforcer"})," is accessible via the ",(0,r.jsx)(i.code,{children:"implementation"})," string ",(0,r.jsx)(i.code,{children:"nodestream.pipeline.filters:SchemaEnforcer"}),"."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Key"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Required"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"enforcement_policy"})}),(0,r.jsxs)(i.td,{children:["The policy to use when enforcing the schema. ",(0,r.jsx)(i.code,{children:"enforce"})," will strictly filter out records. ",(0,r.jsx)(i.code,{children:"warn"})," will simply log that records are violating the schema`"]}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"enforce"})}),(0,r.jsx)(i.td,{children:"No"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"key"})}),(0,r.jsx)(i.td,{children:"The key in the object store to store the schema"}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"None"}),(0,r.jsx)(i.td,{children:"No"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"inference_sample_size"})}),(0,r.jsxs)(i.td,{children:["The number of records to use when inferring the schema. When set to ",(0,r.jsx)(i.code,{children:"None"}),", the schema will not be inferred. If the schema is not inferred, it must be provided via the ",(0,r.jsx)(i.code,{children:"key"}),"."]}),(0,r.jsx)(i.td,{children:"int"}),(0,r.jsx)(i.td,{children:"1000"}),(0,r.jsx)(i.td,{children:"No"})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(i.h4,{id:"infer-schema-from-records",children:"Infer schema from records"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yaml",children:"filters:\n  - implementation: nodestream.pipeline.filters:SchemaEnforcer\n    enforcement_policy: enforce\n    inference_sample_size: 1000\n"})}),"\n",(0,r.jsx)(i.h4,{id:"use-a-predefined-schema",children:"Use a predefined schema"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yaml",children:"filters:\n  - implementation: nodestream.pipeline.filters:SchemaEnforcer\n    enforcement_policy: enforce\n    key: schema # This key much be stored inside the object store at <<pipeline_fila_sha_256>>/<<step-index>>/schema\n"})}),"\n",(0,r.jsx)(i.h2,{id:"reminder",children:"Reminder"}),"\n",(0,r.jsxs)(i.p,{children:["Remember that you can always build your own filters by implementing the ",(0,r.jsx)(i.code,{children:"Filter"})," interface. See ",(0,r.jsx)(i.a,{href:"../../tutorials-advanced/new-steps",children:"here"})," for more information."]})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>c,x:()=>d});var r=s(6540);const t={},n=r.createContext(t);function c(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(n.Provider,{value:i},e.children)}}}]);